name: Sombra Release Nightly

on:
  # Run nightly
  schedule:
    - cron: "0 0 * * *"

  # Allow for manual dispatch on GitHub
  workflow_dispatch:

jobs:
  create-nightly-release:
    name: Create Nightly Release
    runs-on: ubuntu-20.04
    outputs:
      is_active: ${{ steps.activity.outputs.is_active }}
      date: ${{ steps.current_time_underscores.outputs.formattedTime }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      package_prefix: ruffle-nightly-${{ steps.current_time_underscores.outputs.formattedTime }}

    # Only run the scheduled workflows on the main repo.
    if: github.repository == 'sombraguerrero/ruffle'

    steps:
      - uses: actions/checkout@v3

      - name: Check for repo activity
        id: activity
        run: |
          # Skip activity check when manually triggered.
          if [ "${{ github.event_name }}" == "repository_dispatch" ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            is_active=true
          elif [ "$(git rev-list --after="24 hours" ${{ github.sha }})" ]; then
            is_active=true
          else
            is_active=false
          fi
          echo "is_active=$is_active" >> $GITHUB_OUTPUT

      - name: Get current time with dashes
        uses: 1466587594/get-current-time@v2.0.2
        id: current_time_dashes
        with:
          format: YYYY-MM-DD

      - name: Get current time with underscores
        uses: 1466587594/get-current-time@v2.0.2
        id: current_time_underscores
        with:
          format: YYYY_MM_DD

      - name: Create release
        if: steps.activity.outputs.is_active == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-${{ steps.current_time_dashes.outputs.formattedTime }}
          release_name: Nightly ${{ steps.current_time_dashes.outputs.formattedTime }}
          prerelease: true

  build:
    name: Build ${{ matrix.build_name }}
    needs: create-nightly-release
    if: needs.create-nightly-release.outputs.is_active == 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - build_name: linux-x86_64
            os: ubuntu-20.04

         

    env:
      PACKAGE_FILE: ${{ needs.create-nightly-release.outputs.package_prefix }}-${{ matrix.build_name }}.${{ startsWith(matrix.build_name, 'win') && 'zip' || 'tar.gz' }}
      CARGO_BUILD_DIR: target/${{ matrix.target }}/release

    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone Ruffle repo
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt install -y libasound2-dev libxcb-shape0-dev libxcb-xfixes0-dev libgtk-3-dev

      - name: Cargo build
        run: cargo build --package ruffle_desktop --release ${{matrix.DESKTOP_FEATURES && '--features' }} ${{matrix.DESKTOP_FEATURES}} ${{ matrix.target && '--target' }} ${{ matrix.target }}
        env:
          RUSTFLAGS: ${{ matrix.RUSTFLAGS }}
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.MACOSX_DEPLOYMENT_TARGET }}

      - name: Package common
        run: |
          mkdir package
          cp README.md package/README.md
          cp LICENSE.md package/LICENSE.md

      
          
          - name: Upload a Build Artifact
            uses: actions/upload-artifact@v3.1.2
            with:
            # Artifact name
            name: # optional, default is artifact
            # A file, directory or wildcard pattern that describes what to upload
            path: 
            # The desired behavior if no files are found using the provided path.
            Available Options:
              warn: Output a warning but do not fail the action
              error: Fail the action with an error message
              ignore: Do not output any warnings or errors, the action does not fail

            if-no-files-found: # optional, default is warn
            # Duration after which artifact will expire in days. 0 means using default retention.
            Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

            retention-days: # optional

      
